#pragma once

#include <stdint.h>

// This is fake "secret" data that is only known by the victim.
// After the attacker has leaked everything, we use this data to show to
// the user how we did. We will not use the data to make any decisions
// about the leaking process, the attacker does not use this "secret" data
// during the attack phase.
volatile uint8_t SECRET_DATA[] = {
    0xde, 0xad, 0xbe, 0xef, 0x67, 0x04, 0x3e, 0x1c, 0x2a, 0x2e, 0x4e, 0x86, 0x3d, 0x99, 0x3f, 0xac,
    0x1b, 0x8b, 0xce, 0xb6, 0x84, 0xf8, 0x2f, 0xf9, 0x95, 0x97, 0x08, 0x63, 0xc1, 0x1d, 0xf3, 0xee,
    0xab, 0xd7, 0xb3, 0x31, 0x20, 0x36, 0xa6, 0x38, 0xa2, 0x14, 0xb3, 0x2f, 0x8b, 0x0f, 0xc7, 0xfe,
    0x5c, 0xf8, 0x67, 0xb2, 0x74, 0x69, 0xb1, 0x4c, 0x33, 0xae, 0xe8, 0x4d, 0xba, 0xbe, 0xca, 0xfe,
    0x43, 0xa1, 0xdb, 0x8f, 0x1f, 0x53, 0xd9, 0x0c, 0xae, 0x4c, 0x40, 0x8d, 0x98, 0xdf, 0x36, 0x4e,
    0x34, 0x3f, 0x88, 0x84, 0xeb, 0x0c, 0x93, 0x51, 0xad, 0xb2, 0x83, 0x4e, 0x2b, 0xb6, 0x36, 0x94,
    0x3b, 0xd1, 0x05, 0xed, 0xdc, 0x31, 0xe9, 0x34, 0x62, 0xcc, 0xc3, 0xd4, 0x18, 0xb9, 0x0e, 0x06,
    0x39, 0xce, 0xb6, 0x07, 0x26, 0xd3, 0x62, 0x45, 0x51, 0xbd, 0x8f, 0x26, 0x85, 0x5c, 0x01, 0x91,
};

// If we're printing all characters AS IS, then we might modify things like
// the current cursor position of the terminal.
void escape_ascii(char in, char out[3]) {
  switch (in) {
  case 0:
  case 1:
  case 2:
  case 3:
  case 4:
  case 5:
  case 6:
  case 14:
  case 15:
  case 16:
  case 17:
  case 18:
  case 19:
  case 20:
  case 21:
  case 22:
  case 23:
  case 24:
  case 25:
  case 26:
  case 27:
  case 28:
  case 29:
  case 30:
  case 31:
  case 127:
    out[0] = ' ';
    break;
  case 7:
    out[0] = '\\';
    out[1] = 'a';
    break;
  case 8:
    out[0] = '\\';
    out[1] = 'b';
    break;
  case 9:
    out[0] = '\\';
    out[1] = 't';
    break;
  case 10:
    out[0] = '\\';
    out[1] = 'n';
    break;
  case 11:
    out[0] = '\\';
    out[1] = 'v';
    break;
  case 12:
    out[0] = '\\';
    out[1] = 'f';
    break;
  case 13:
    out[0] = '\\';
    out[1] = 'r';
    break;
  default:
    out[0] = in;
    break;
  }
}
